1. "worse is better"是指有时候尽可能简单的功能能够达到更好的效果. 
2. 合适的场景：编程语言；硬件或软件的接口
   不合适的场景：面向用户的产品；建筑工程
3. 微服务项目适用”worst is better“。通过模块的划分，使得每一个服务尽可能简单，服务间通信尽可能减少，能够发挥微服务的效益。